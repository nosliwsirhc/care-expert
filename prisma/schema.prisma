// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("SECRET_DATABASE_URL")
  shadowDatabaseUrl = env("SECRET_SHADOW_DATABASE_URL")
}

enum Role {
  Admin
  FosterParent
  EmployeeCaregiver
  Director
  Bookkeeper
  ProgramSupervisor
  ResourceWorker
  Unassigned
}

model AuthUser {
  id String @id @default(uuid())
  email String @unique
  firstName String? @map("first_name")
  lastName String? @map("last_name")
  org Organization? @relation(fields: [orgId], references: [id])
  orgId String @map("org_id")
  role Role @default(Unassigned)
  auth_session AuthSession[]
  auth_key     AuthKey[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

model AuthSession {
  id             String	@id @unique
  user_id        String
  active_expires BigInt
  idle_expires   BigInt
  auth_user      AuthUser   @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_session")
}

model AuthKey {
  id              String  @id @unique
  hashed_password String?
  user_id         String
  primary_key     Boolean
  expires         BigInt?
  auth_user       AuthUser    @relation(references: [id], fields: [user_id], onDelete: Cascade)

  @@index([user_id])
  @@map("auth_key")
}

enum OrgType {
  Opr
  PlacingAgency
  ServiceProvider
  Unassigned
}

enum OrgEmailPolicy {
  Open
  Initials
  FirstNameLastInitial
  FullyRedacted
}

model Organization {
  id String @id @default(uuid())
  name String @unique
  orgType OrgType @default(Unassigned)
  users AuthUser[]
  addresses OrganizationAddress[]
  emailPolicy OrgEmailPolicy @default(FullyRedacted)
  emailAddresses OrganizationEmail[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("organization")
}

model OrganizationAddress {
  id String @id @default(uuid())
  organization Organization @relation(fields: [orgId], references: [id])
  orgId String
  street1 String
  street2 String?
  poBox String?
  province String @default("Ontario")
  city String
  postalCode String?
  primary Boolean @default(true)
  label String @default("main")
  startDate DateTime @default(now())
  endDate DateTime?
  billing Boolean @default(true)
  shipping Boolean @default(true)

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("organization_address")
}

enum OrgEmailType {
  Placement
  Billing
  Admin
  SRA
  Unassigned
}

model OrganizationEmail {
  id String @id @default(uuid())
  organization Organization @relation(fields: [orgId], references: [id])
  orgId String
  type OrgEmailType @default(Unassigned)
  email String
  contactName String?

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("organization_email")
}